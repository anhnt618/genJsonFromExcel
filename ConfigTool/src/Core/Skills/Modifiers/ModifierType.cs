using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Core.Skills.Modifiers {
	public enum ModifierType {
		MovementSpeed = -1,
		Attack = -2,
		Def = -3,
		Burn = -4,
		Healing = -5,
		ReduceDamageByDistance = -6,
		ReduceDamagePercentage = -7,
		CritDamageOverride = -8,
		CritRateOverride = -9,
		AttackOverride = -10,
		MaxHpOverride = -11,
		DefOverride = -12,
		MagicResistOverride = -13,
		InstantHp = -14,
		DamageBlock = -15,
		KnockbackWeight = -16,
		KnockdownWeight = -17,
		Scream = -18,
		Cursed = -19,
		ColdBurn = -20,
		Static = -21,
		SkillCritDamage = -22,
		SkillCritRate = -23,
		ArenaRuneAttack = -24,
		ArenaRuneArcane = -25,
		ArenaRuneHealth = -26,
		ArenaRuneHaste = -27,
		ActiveSkillCooldown = -28,
		Warcry = -29,
		Bless = -30,
		Bleed = -31,
		WildHowl = -32,
		DisableJump = -33,
		DarkArcane = -34,
		CcImmune = -35,
		DamageImmune = -36,
		LockFrame = -37,
		AdvancedFrame = -38,
		Vibrate = -39,
		CameraFxShake = -40,
		PlayImpactVfx = -41,
		PauseMovement = -42,
		PauseAnimation = -43,
		PlayAnimation = -44,
		DamageOverTime = -45,
		HitboxTransform = -46,
		Stats = -47,
		Invisible = -48,
		Dash = -49,
		ColliderConfig = -50,
		SuperArmor = -51,
		WeakArmor = -52,
		Scale = -53,
		MovementSpeed2 = -54,
		StunBreak = -55,
		IkAnimation = -56,
		AetherOnDamaged = -57,
		Sfx = -58,
		HpShield = -59,
		LifeSteal = -60,
		MaxCooldown = -61,
		MaxAether = -62,
		AetherRecovery = -63,
		ParentSkillEventDispatcher = -64,
		CooldownBySecond = -65,
		SuperAtk = -66,
		AttachedVfx = -67,
		ComboDamageType = -68,
		DamageTypeOverride = -69,
		Wind = -70,
		Recast = -71,
		CcBreakByInput = -72,
		CooldownBySecondUponHitTarget = -73,
		DarkEnergy = -74,
		HealByRawAtkUponEnemyHit = -75,
		ProjectileTrigger = -76,

		Stagger = 5,
		Stun = 10,
		Trip = 12,
		Launcher = 13,
		Blast = 14,
		Knockdown = 16,
		Shackle = 40,
		Ragdoll = 50,
		Sleep = 55,
		Freeze = 60,
		Vanish = 70,
		Immune = 80,
	}

	static class ModifierTypeMethods {
		public static int Rank(this ModifierType modifierType) {
			return (int) modifierType;
		}
	}
}
